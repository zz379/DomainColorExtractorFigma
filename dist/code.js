!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}({7:function(e,t){var n=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(i,r){function a(e){try{l(o.next(e))}catch(e){r(e)}}function c(e){try{l(o.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}l((o=o.apply(e,t||[])).next())}))};const o={timeout:1e3};function i(){const e=figma.currentPage.selection;if(1!=e.length)return!1;const t=e[0];if(!r(t.fills))for(const e of t.fills)if("IMAGE"===e.type)return!0;return!1}function r(e){return"symbol"==typeof e}figma.showUI(__html__,{width:230,height:221}),figma.ui.postMessage({type:"checkSelection",isSelectedTheImage:i()}),figma.ui.onmessage=e=>{"extractColor"===e.type?function(){n(this,void 0,void 0,(function*(){const e=figma.currentPage.selection;if(1!=e.length)return void figma.notify("Please select an Image",o);const t=e[0],n=t.name,i=t;if(!r(i.fills))for(let e of i.fills)if(console.log("Paint Type = "+e.type),"IMAGE"===e.type){e=e,console.log("Paint Scale Mode = "+e.scaleMode);let o=null;o="FILL"===e.scaleMode?figma.getImageByHash(e.imageHash):figma.createImage(yield t.exportAsync());const i=yield o.getBytesAsync();figma.ui.postMessage({type:"networkRequest",imageName:n,imageBytes:i})}}))}():"copyResult"===e.type&&figma.notify(e.value?"复制成功":"复制失败，请手动复制",o)},figma.on("selectionchange",()=>{console.log("---------------- On Selection Change ----------------"),figma.ui.postMessage({type:"checkSelection",isSelectedTheImage:i()})})}});